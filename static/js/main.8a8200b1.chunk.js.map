{"version":3,"sources":["assets/ava.jpg","assets/Ripple-1s-150px.svg","components/Profile/Profile.module.css","components/Login/LoginPage.module.css","assets/logo.png","assets/avadef.jpg","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/messagesReducer.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","api/api.js","redux/usersReducer.js","components/Paginator/Paginator.jsx","components/Users/Users.jsx","components/Preloader/Preloader.js","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileStatus/ProfileStatusHooks.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","components/FormsControl/FormsControl.jsx","utils/validators/validator.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profileReducer.js","components/Myposts/Post/Post.jsx","components/Myposts/Myposts.jsx","components/Myposts/MypostsContainer.jsx","components/Profile/FriendList/FriendList.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","redux/authReducer.js","components/Login/LoginPage.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.js","App.js","redux/reduxStore.js","index.js","components/Navbar/Navbar.module.css","components/Profile/FriendList/FriendList.module.css","components/Users/users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Myposts/Myposts.module.css","components/Myposts/Post/Post.module.css","components/FormsControl/FormsControl.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","nav_item","navIcon","src","to","initialState","dialogs","id","name","messages","message","messagesReducer","state","action","type","text","newMessageBody","length","DialogItem","props","path","dialog","defaultUser","dialogsUserName","Message","messageAva","ava","messageBody","messageName","AddMessageFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","messagesAreaPlusButton","Field","component","placeholder","Dialogs","messagesPage","dialogsElements","map","key","messagesElements","newMessageText","messagesItem","value","sendMessage","dialogsItem","mapStateToPropsForRedirect","isAuth","auth","compose","connect","sendMessageCreator","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","followAPI","post","delete","profileAPI","userId","status","put","photoFile","formData","FormData","append","profile","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingInProgress","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","filter","Paginator","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginationBlock","prevButton","onClick","p","cn","selectedPage","pageNumber","e","onPageChanged","nextButton","Users","allUsersBlock","userBlock","userPhotoBlock","photos","small","userPhoto","usersPhoto","nameBlock","locationBlock","followButtonBlock","disabled","some","unfollow","follow","Preloader","preloader","getAllUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","getUsers","resultCode","followSuccess","unfollowSuccess","a","items","totalCount","ProfileStatusHooks","editMode","setEditMode","setStatus","useEffect","onChange","currentTarget","autoFocus","onBlur","updateStatus","Input","input","meta","hasError","touched","error","formControl","required","ProfileDataFormReduxForm","profileDescriptionBlock","formAddInfo","married","birthDay","birthCity","saveDataButton","ProfileData","isOwner","activateEditMode","fullname","fullName","sdat","lookingForAJob","skills","lookingForAJobDescription","about","aboutMe","vk","contacts","github","editDataButton","ProfileInfo","profileContent","mainContent","profileInfo","profilePhoto","profileAvatar","large","userphotoDefault","addPhoto","target","files","savePhoto","profileDescription","pageName","initialValues","saveDataProfile","posts","likesCount","getUserProfile","profileReducer","newPostBody","Post","item","postImage","textPost","postName","likes","AddNewPostFormRedux","areaPlusButton","avaImage","Myposts","mainContentPosts","addPost","postsBlock","MypostsContainer","prevProps","prevState","setState","profilePage","newPostText","addPostActionCreator","FriendList","friendListBlock","friendsList","friendDefault","friend","Profile","friendsPostsBlock","ProfileContainer","params","authorizedUserId","history","getStatus","updateProfile","snapshot","file","getState","withRouter","login","setAuthUserData","payload","getAuthUserData","authReducer","maxLength","maxLengthCreator","LoginReduxForm","validate","loginizationError","stopSubmit","_error","Header","headerBlock","loginBlock","loginButton","logout","avaLoginBlock","miniAvaLoginBlock","HeaderContainer","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a8200b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ava.82b23df9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ripple-1s-150px.482076b1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsPostsBlock\":\"Profile_friendsPostsBlock__7r9H6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginizationError\":\"LoginPage_loginizationError__3pC-T\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b3c46df9.png\";","module.exports = __webpack_public_path__ + \"static/media/avadef.7abc474b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__MXxJQ\",\"dialogsItem\":\"Dialogs_dialogsItem__KqJkc\",\"messagesItem\":\"Dialogs_messagesItem__2euYw\",\"dialog\":\"Dialogs_dialog__hvqlh\",\"dialogsUserName\":\"Dialogs_dialogsUserName__1kFvG\",\"message\":\"Dialogs_message__2WnAE\",\"messageBody\":\"Dialogs_messageBody__17OZ4\",\"messageName\":\"Dialogs_messageName__2Oa2N\",\"messagesAreaPlusButton\":\"Dialogs_messagesAreaPlusButton__21jet\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n       \r\n          <div>\r\n          \r\n            <div className={s.nav_item}>\r\n              <img className={s.navIcon} src=\"https://img.icons8.com/cotton/64/000000/home--v1.png\"/>\r\n              <NavLink to='/profile'>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={s.nav_item}>\r\n              <img className={s.navIcon} src=\"https://img.icons8.com/cotton/64/000000/secured-letter--v1.png\"/>\r\n              <NavLink to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n\r\n            <div className={s.nav_item}>\r\n              <img className={s.navIcon} src=\"https://img.icons8.com/cotton/64/000000/news.png\"/>\r\n              <NavLink to='#'>News</NavLink>\r\n              </div>\r\n            \r\n            <div className={s.nav_item}>\r\n              <img className={s.navIcon} src=\"https://img.icons8.com/cotton/64/000000/user-male--v1.png\"/>\r\n              <NavLink to='/users'>Users</NavLink>\r\n            </div>\r\n          </div>\r\n          \r\n      </nav>\r\n};\r\n\r\nexport default Navbar;","const   SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name:'Иван'},\r\n        {id: 2, name:'Евгений'},\r\n        {id: 3, name:'Дарья'},\r\n        {id: 4, name:'Оксана'},\r\n        {id: 5, name:'Денис'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message:'First message'},\r\n        {id: 2, message:'Second message'},\r\n        {id: 3, message:'Third message'},\r\n        {id: 4, message:'Fourth message'},\r\n        {id: 5, message:'Fifth message'},\r\n    ]\r\n\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) { \r\n        case SEND_MESSAGE: \r\n        let text = action.newMessageBody;\r\n        let id = state.messages[state.messages.length - 1].id + 1;\r\n        return {\r\n            ...state,\r\n            messages: [...state.messages, {id, message: text}]\r\n        }      \r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    };\r\n};\r\n\r\nexport default messagesReducer;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport ava from '../../assets/ava.jpg'\r\nimport defaultUser from '../../assets/avadef.jpg'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div>\r\n                <img src={defaultUser}/>\r\n            </div>\r\n            <div className={s.dialogsUserName}>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Message = (props) => {\r\n    return (\r\n\r\n        <div className={s.message}>\r\n            <div className={s.messageAva}>\r\n                <img src={ava}/>\r\n            </div>\r\n            <div className={s.messageBody}>\r\n                <div className={s.messageName}>\r\n                    <span>Kifo</span>\r\n                </div>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem id={dialog.id} key={dialog.id} name={dialog.name}/>);\r\n    let messagesElements = state.messages.map(message => <Message id={message.id} key={message.id} message={message.message}/>);\r\n    let newMessageText = state.newMessageText;\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    };\r\n\r\n    // if (!props.isAuth) {\r\n    //     return <Redirect to={'/login'}/>\r\n    // }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n                <div className={s.messagesItem}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('dialogAddMessageForm'));\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.messagesAreaPlusButton}>\r\n                <Field component='textarea' name='newMessageBody' placeholder='Введите сообщение'/>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm',\r\n    onSubmitSuccess: afterSubmit\r\n})(AddMessageForm);\r\n\r\n\r\nexport default Dialogs; ","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator, updateNewMessageTextCreator } from '../../redux/messagesReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs); ","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'bd0425f6-c69b-4945-8e14-eb03d93836c3'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n};\r\n\r\nexport const followAPI = {\r\n    follow(id){\r\n        return instance.post(`follow/${id}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unfollow(id){\r\n        return instance.delete(`follow/${id}`).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/from-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    auth() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {\r\n            email: email, \r\n            password: password, \r\n            rememberMe: rememberMe\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n","import {usersAPI, followAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW',\r\n    UNFOLLOW = 'UNFOLLOW',\r\n    SET_USERS = 'SET_USERS',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT',\r\n    TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 9,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creaters \r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    };\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    };\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    };\r\n};\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    };\r\n};\r\n\r\n// Thunk-s\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    };\r\n}\r\n\r\nexport const onPageChanged = (pageNumber, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n    };\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        followAPI.follow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        followAPI.unfollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    };\r\n};\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = (props, {portionSize = 5}) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);  \r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.paginationBlock}>\r\n                { portionNumber > 1 &&\r\n                <button className={s.prevButton} onClick={() => {setPortionNumber(portionNumber - 1)} }>Prev</button> }\r\n                {\r\n                    pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber).map((p) => {\r\n                    return <div className={cn({[s.selectedPage]: props.currentPage === p}, s.pageNumber)} key={p} onClick={(e) => {props.onPageChanged(p)}}>{p}</div>\r\n                    })\r\n                }\r\n                {portionCount > portionNumber &&\r\n                    <button className={s.nextButton} onClick={() => {setPortionNumber(portionNumber + 1)} }>Next</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './users.module.css';\r\nimport userPhoto from '../../assets/avadef.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from \"../Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                       totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n            <div className={s.allUsersBlock}>\r\n            {\r\n\r\n                props.users.map( u => <div className={s.userBlock} key={u.id}>\r\n                    <div className={s.userPhotoBlock}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.usersPhoto}/>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n\r\n                    <div className={s.nameBlock}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <div>{u.name}</div>\r\n                        </NavLink>\r\n\r\n                        <i>{u.status}</i>\r\n                    </div>\r\n\r\n                    <div className={s.locationBlock}>\r\n\r\n                        <div className={s.followButtonBlock}>\r\n                            {u.followed\r\n                                ? <button disabled={ props.followingInProgress.some(id => id === u.id) }\r\n                                onClick={ () => { props.unfollow(u.id) } }>Unfollow</button>\r\n                                : <button disabled={ props.followingInProgress.some(id => id === u.id) }\r\n                                onClick={ () => { props.follow(u.id) } }>Follow</button>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                )\r\n\r\n            }\r\n            </div>\r\n            <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                       totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from '../../assets/Ripple-1s-150px.svg';\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <img src={preloader} /> \r\n    </div>\r\n};\r\n\r\nexport default Preloader;","export const getAllUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, setTotalUsersCount, toggleFollowingProgress, getUsers, onPageChanged } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getAllUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/usersSelectors';\r\n// Контейнерный компонент для данных компонента Users => Обертка Users\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.onPageChanged(pageNumber, this.props.pageSize);\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n        { this.props.isFetching ? <Preloader /> : null}\r\n            <Users \r\n                totalUsersCount={this.props.totalUsersCount} \r\n                pageSize={this.props.pageSize} \r\n                currentPage={this.props.currentPage} \r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n        \r\n}\r\n\r\n// Контейнерный компонент для данных redux'a => Обертка UsersContainer\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     };\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getAllUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        onPageChanged,\r\n        setTotalUsersCount,\r\n        toggleFollowingProgress,\r\n        getUsers\r\n    }),\r\n    //withAuthRedirect\r\n)(UsersContainer);\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onClick={ activateEditMode }>{props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={ onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={ status }></input>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusHooks;","import React from 'react';\r\nimport s from './Profile.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={ this.activateEditMode }>{this.props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}></input>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './FormsControl.module.css';\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : ' ')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n        \r\n    )\r\n};","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Обязательное поле';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Максимум ${maxLength} символов`;\r\n    }\r\n    return undefined;\r\n};\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../FormsControl/FormsControl\";\r\nimport {required} from \"../../../utils/validators/validator\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile}) => {\r\n    return <form className={s.profileDescriptionBlock} onSubmit={handleSubmit}>\r\n        <div>\r\n            <div className={s.formAddInfo}>\r\n                <span>Full Name: </span><span className={s.married}>{ <Field placeholder={'Full name'} name={'fullName'} component={Input} />}</span>\r\n            </div>\r\n            <div className={s.formAddInfo}>\r\n                <span>Birthday:</span><span className={s.birthDay}> 11 may</span>\r\n            </div>\r\n            <div className={s.formAddInfo}>\r\n                <span>City: </span><span className={s.birthCity}>Karakol</span>\r\n            </div>\r\n            <div className={s.formAddInfo}>\r\n                <span>Family status: </span><span className={s.married}>Not married</span>\r\n            </div>\r\n            <div className={s.formAddInfo}>\r\n                <span>Sdat kyrsach: </span><span className={s.married}>{<Field component={'input'} name={'lookingForAJob'} type={'checkbox'}/>}</span>\r\n            </div>\r\n            <div className={s.formAddInfo}>\r\n                <span>Skills: </span><span className={s.married}>{<Field component={'input'} name={'lookingForAJobDescription'} type={'textarea'}/>}</span>\r\n            </div>\r\n            <div className={s.formAddInfo}>\r\n                <span>About me: </span><span className={s.married}>{<Field placeholder={'About me'} name={'aboutMe'} component={Input} />}</span>\r\n            </div>\r\n        </div>\r\n        <span>Contacts:\r\n            <div className={s.formAddInfo}> <span>Vk: </span>{<Field placeholder={'VK'} name={'contacts.vk'} component={Input} />}</div>\r\n            <div className={s.formAddInfo}> <span>Github: </span>{<Field placeholder={'Github'} name={'contacts.github'} component={Input} />}</div>\r\n        </span>\r\n        <div className={s.saveDataButton}>\r\n            <button>Save</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm(\r\n    {\r\n        form: 'editProfile'\r\n    }\r\n)(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Preloader/Preloader.js';\r\nimport ProfileStatus from '../ProfileStatus/ProfileStatus';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ProfileStatusHooks from '../ProfileStatus/ProfileStatusHooks';\r\nimport userphotoDefault from '../../../assets/avadef.jpg';\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    // if (!props.isAuth) { \r\n    //     return <Redirect to={'/login'}/>\r\n    // }\r\n    // let contacts = [];\r\n    // for (let i = 1; i <= props.profile.contacts.length; i++) {\r\n    //     contacts.push(props.profile.contacts[i]);\r\n    // }\r\n    const avatarChange = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveDataProfile(formData);\r\n        setEditMode(false);\r\n    }\r\n    return ( \r\n    <div className={s.profileContent}>\r\n        <div className={s.mainContent}>\r\n            <div className={s.profileInfo}>\r\n\r\n                    <div className={s.profilePhoto}>\r\n                        <img className={s.profileAvatar} src={props.profile.photos.large || userphotoDefault}/>\r\n\r\n                        <div className={s.addPhoto}>\r\n                            { props.isOwner && <input type={\"file\"} onChange={avatarChange}/>}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={s.profileDescription}>\r\n                        <div className={s.nameBlock}>\r\n                            <h1 className={s.pageName}>{props.profile.fullName}</h1>\r\n                            <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                        </div>\r\n                        {editMode\r\n                            ? <ProfileDataFormReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                            : <ProfileData profile={props.profile} isOwner={props.isOwner} activateEditMode={() => {setEditMode(true)}}/>\r\n                        }\r\n\r\n                    </div>                      \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n};\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n    return <div className={s.profileDescriptionBlock}>\r\n        <div>\r\n            <div>\r\n                <span>Full Name: </span><span className={s.fullname}>{profile.fullName}</span>\r\n            </div>\r\n            <div>\r\n                <span>Birthday:</span><span className={s.birthDay}> 11 may</span>\r\n            </div>\r\n            <div>\r\n                <span>City: </span><span className={s.birthCity}>Karakol</span>\r\n            </div>\r\n            <div>\r\n                <span>Family status: </span><span className={s.married}>Not married</span>\r\n            </div>\r\n            <div>\r\n                <span>Sdat kyrsach: </span><span className={s.sdat}>{profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n            </div>\r\n            <div>\r\n                <span>Skills: </span><span className={s.skills}>{profile.lookingForAJobDescription}</span>\r\n            </div>\r\n            <div>\r\n                <span>About me: </span><span className={s.about}>{profile.aboutMe}</span>\r\n            </div>\r\n        </div>\r\n        <span>Contacts:\r\n            <div><span>vk: </span><span className={s.vk}>{profile.contacts.vk}</span></div>\r\n            <div><span>github: </span><span className={s.github}>{profile.contacts.github}</span></div>\r\n        </span>\r\n        {isOwner &&\r\n            <div className={s.editDataButton}>\r\n                <button onClick={activateEditMode}>Edit</button>\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import { profileAPI } from \"../api/api\";\r\n\r\nconst   ADD_POST = 'ADD-POST',\r\n        SET_USER_PROFILE = 'SET_USER_PROFILE',\r\n        TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING',\r\n        SET_STATUS = 'SET_STATUS',\r\n        SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n    {id: 1, message: 'First random post', likesCount: 20},\r\n    {id: 2, message: 'Second random post', likesCount: 15},\r\n    {id: 3, message: 'Ale ejji', likesCount: 50}\r\n    ],\r\n    profile: null,\r\n    isFetching: false,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: \r\n        let id = state.posts[state.posts.length - 1].id + 1;\r\n        let message = action.newPostBody;\r\n        let likesCount = 0;\r\n        return {\r\n            ...state,\r\n            posts: [...state.posts, {id, message, likesCount}]\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n            ...state,\r\n            profile: action.profile\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\n\r\nexport const addPostActionCreator = (newPostBody) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    };\r\n};\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    };\r\n};export const sevePhotoSeccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    };\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    };\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    };\r\n};\r\n// Thunk-s \r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async(dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const savePhoto = (file) => async(dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(sevePhotoSeccess(response.data.data.photos));\r\n    }\r\n};\r\nexport const saveDataProfile = (profile) => async(dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={s.item}>\r\n        <img className={s.postImage} src='https://i.pinimg.com/736x/60/69/d5/6069d5dcde2d621fa89bc32b4108115a.jpg'/>\r\n            <div className={s.textPost}>\r\n                <div>\r\n                    <span className={s.postName}>Kifo</span>\r\n                </div>\r\n                <div>\r\n                    <span>{props.message}</span>\r\n                </div>\r\n                \r\n            </div>\r\n        <span>Likes: {props.likes}</span>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, reset, Field } from 'redux-form';\r\n\r\n\r\n\r\nconst Myposts = (props) => {\r\ndebugger;\r\n    let posts = props.posts.map(post => <Post \r\n        id={post.id} \r\n        message={post.message} \r\n        likes={post.likesCount} \r\n        key={post.id} \r\n        // fullName={post.profile.fullName} \r\n        // smallPhoto={post.profile.photos.small}\r\n        // largePhoto={post.profile.photos.large}\r\n        />);\r\n\r\n    let newPost = (value) => { \r\n        props.addPost(value.newPostBody);\r\n    };\r\n\r\n    return <div className={s.mainContentPosts}>\r\n        <AddNewPostFormRedux onSubmit={newPost}/>\r\n        <div className={s.postsBlock}>\r\n            {posts}\r\n        </div>\r\n        \r\n    </div>\r\n};\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('newPostForm'));\r\n};\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.areaPlusButton}>\r\n                <img className={s.avaImage} src={'https://i.pinimg.com/736x/60/69/d5/6069d5dcde2d621fa89bc32b4108115a.jpg'}/>\r\n                <Field component='textarea' name='newPostBody' placeholder='Что нового?'/>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'newPostForm',\r\n    onSubmitSuccess: afterSubmit\r\n})(NewPostForm)\r\n\r\nexport default Myposts;\r\n","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../redux/profileReducer';\r\nimport Myposts from './Myposts';\r\nimport { connect } from 'react-redux';\r\n\r\n//переделать в классовую компоненту и заюзать componentDidUpdate\r\n\r\nclass MypostsContainer extends React.Component {\r\n    state = {\r\n        profile: this.props.profile\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.profile != this.props.profile) {\r\n            this.setState({\r\n                profile: this.props.profile\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return <Myposts {...this.props} />\r\n    }\r\n    \r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MypostsContainer);\r\n","import React from 'react';\r\nimport s from './FriendList.module.css'\r\nimport friend from '../../../assets/avadef.jpg'\r\n\r\nconst FriendList = (props) => {\r\n    return (\r\n        <div className={s.friendListBlock}>\r\n            <span>Friends</span>\r\n            <div className={s.friendsList}>\r\n                <img className={s.friendDefault} src={friend}/>\r\n                <img className={s.friendDefault} src={friend}/>\r\n                <img className={s.friendDefault} src={friend}/>\r\n                <img className={s.friendDefault} src={friend}/>\r\n                <img className={s.friendDefault} src={friend}/>\r\n                <img className={s.friendDefault} src={friend}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MypostsContainer from '../Myposts/MypostsContainer';\r\nimport FriendList from './FriendList/FriendList';\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = (props) => {\r\ndebugger\r\n    return ( \r\n    <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} saveDataProfile={props.saveDataProfile} isOwner={props.isOwner} savePhoto={props.savePhoto}/>\r\n        <div className={s.friendsPostsBlock}>\r\n            <FriendList />\r\n            <MypostsContainer profile={props.profile}/>  \r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveDataProfile} from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    updateProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.updateProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// HOC\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveDataProfile}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst   SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        }\r\n    };\r\n};\r\n\r\n//Thunk-s\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n        let response = await authAPI.auth();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    };\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Какая-то ошибка';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n};\r\nexport default authReducer;","import React from 'react';\r\nimport {reduxForm, Field, reset} from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validator';\r\nimport { Input } from '../FormsControl/FormsControl';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './LoginPage.module.css';\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('login'));\r\n};\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} type={'password'} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'input'} name={'rememberMe'} type={'checkbox'}/> Remember me\r\n            </div>\r\n            {props.error &&\r\n            <div className={s.loginizationError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n    onSubmitSuccess: afterSubmit\r\n  })(LoginForm)\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Пожалуйста, залогиньтесь</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default connect(mapStateToProps, {login} )(Login);","import React, { useState } from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n\t\t<div className={s.headerBlock}>\r\n\t\t\t<div>\r\n\t\t\t{\r\n\t\t\tprops.isAuth ? \r\n\t\t\t<div className={s.loginBlock}>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className={s.loginButton} onClick={props.logout}>Logout</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.login}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.avaLoginBlock}>\r\n\t\t\t\t\t{!props.profile &&\r\n\t\t\t\t\t<span>No photo</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{props.profile &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img className={s.miniAvaLoginBlock} src={props.profile.photos.small}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t</div>  \r\n\t\t\t: <NavLink to={'/login'}>Login</NavLink>\r\n\t\t\t}\t\r\n\t\t\t{/* <div className={s.authProfileAva}>\r\n                <img className={s.authProfileAvaImg} src={props.profile.photos.large}/>\r\n            </div> */}\r\n    \t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {getAuthUserData, logout} from '../../redux/authReducer';\r\nimport { getUserProfile } from '../../redux/profileReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    state = {\r\n        profile: this.props.profile\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.profile != this.props.profile) {\r\n            this.setState({\r\n                profile: this.props.profile\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n    \r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        profile: state.profilePage.profile\r\n    };\r\n    \r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getAuthUserData,\r\n    logout\r\n})(HeaderContainer);","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state, \r\n                initialized: true\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then( () => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, withRouter } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Login from './components/Login/LoginPage';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { initializeApp } from './redux/appReducer';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Preloader/Preloader';\n\nclass App extends Component {\n\tcomponentDidMount(){\n\t\tthis.props.initializeApp();\n\t}\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader />\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<div className='app-main'>\n\t\t\t\t\t<Navbar/>\n\t\t\t\t\t<div className='mainContent'>\n\t\t\t\t\t\t<Route path='/profile/:userId?' render={ () => <ProfileContainer /> } />\n\t\t\t\t\t\t<Route path='/dialogs' render={ () => <DialogsContainer /> } />\n\t\t\t\t\t\t<Route path='/users' render={ () => <UsersContainer /> } />\n\t\t\t\t\t\t<Route path='/login' render={ () => <Login />} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized\n})\nexport default compose(\n\twithRouter,\n\tconnect(mapStateToProps, { initializeApp }))(App);\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './redux/reduxStore';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\n\n        ReactDOM.render(\n            <HashRouter>\n                <Provider store={store}>\n                    <App />\n                </Provider>     \n            </HashRouter>, document.getElementById('root')\n        );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1cZd8\",\"nav_item\":\"Navbar_nav_item__26ML0\",\"navIcon\":\"Navbar_navIcon__r8w25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendListBlock\":\"FriendList_friendListBlock__KIjO0\",\"friendsList\":\"FriendList_friendsList__1Ffno\",\"friendDefault\":\"FriendList_friendDefault__2JwzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allUsersBlock\":\"users_allUsersBlock__2QaTX\",\"userBlock\":\"users_userBlock__3s5v6\",\"usersPhoto\":\"users_usersPhoto__1VBg8\",\"nameBlock\":\"users_nameBlock__3Xg_S\",\"locationBlock\":\"users_locationBlock__r2Zly\",\"followButtonBlock\":\"users_followButtonBlock__33A0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContent\":\"ProfileInfo_profileContent__2MaYC\",\"profileInfo\":\"ProfileInfo_profileInfo__1cb8b\",\"profilePhoto\":\"ProfileInfo_profilePhoto__Q8jHl\",\"profileAvatar\":\"ProfileInfo_profileAvatar__16Y7B\",\"profileDescription\":\"ProfileInfo_profileDescription__38m1T\",\"nameBlock\":\"ProfileInfo_nameBlock__2CUBM\",\"pageName\":\"ProfileInfo_pageName__1a2Wc\",\"profileDescriptionBlock\":\"ProfileInfo_profileDescriptionBlock__3c409\",\"birthDay\":\"ProfileInfo_birthDay__3b2Sy\",\"birthCity\":\"ProfileInfo_birthCity__3aO_A\",\"married\":\"ProfileInfo_married__1v4dL\",\"addPhoto\":\"ProfileInfo_addPhoto__2iRMI\",\"formAddInfo\":\"ProfileInfo_formAddInfo__33ZrR\",\"fullname\":\"ProfileInfo_fullname__2Vrni\",\"sdat\":\"ProfileInfo_sdat___xCyS\",\"skills\":\"ProfileInfo_skills__2WKeW\",\"about\":\"ProfileInfo_about__1A1qS\",\"vk\":\"ProfileInfo_vk__VBk7k\",\"github\":\"ProfileInfo_github__1siFQ\",\"editDataButton\":\"ProfileInfo_editDataButton__7EO0_\",\"saveDataButton\":\"ProfileInfo_saveDataButton__D-KMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1H5IB\",\"paginationBlock\":\"Paginator_paginationBlock__jlY98\",\"pageNumber\":\"Paginator_pageNumber__3wULW\",\"prevButton\":\"Paginator_prevButton__3FQeY\",\"nextButton\":\"Paginator_nextButton__3yWJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__2_VVP\",\"loginBlock\":\"Header_loginBlock__1eYIf\",\"loginButton\":\"Header_loginButton__1QHZc\",\"miniAvaLoginBlock\":\"Header_miniAvaLoginBlock__3SHBm\",\"avaLoginBlock\":\"Header_avaLoginBlock__3lE7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentPosts\":\"Myposts_mainContentPosts__-VFah\",\"areaPlusButton\":\"Myposts_areaPlusButton__2l0aS\",\"avaImage\":\"Myposts_avaImage__DBRAF\",\"postsBlock\":\"Myposts_postsBlock__17hsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__RKH9h\",\"postImage\":\"Post_postImage__yDIE_\",\"textPost\":\"Post_textPost__1Rb46\",\"postName\":\"Post_postName__3kmsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__eGIbT\",\"error\":\"FormsControl_error__1tx0l\"};"],"sourceRoot":""}